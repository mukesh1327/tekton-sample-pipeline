apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: spring-boot-todo
  
spec:
  params:
    - description: url of the git source code repo for the code of deployment
      name: GIT_SOURCECODE_URL
      type: string
    - default: main
      description: revision to be used from repo of the code for deployment
      name: GIT_SOURCECODE_REVISION
      type: string
    - description: Source code Project directory
      name: SOURCECODE_DIR
      type: string
    - description: url of the git deployment manifests repo for the code of deployment
      name: GIT_DEPLOYMENT_MANIFESTS_URL
      type: string
    - default: main
      description: revision to be used from repo of the code for deployment
      name: GIT_DEPLOYMENT_MANIFESTS_REVISION
      type: string
    - description: Deployment manifests directory
      name: DEPLOYMENT_MANIFESTS_DIR
      type: string
    - description: Git user name for pushing the code
      name: GIT_USER_NAME
      type: string
    - description: Git user email for pushing the code
      name: GIT_USER_EMAIL
      type: string
    - description: Dockerfile path in the project source
      name: DOCKERFILE_PATH
      type: string
    - description: Name and tag for the application container image
      name: IMAGE
      type: string
    - description: Name and tag for the application container image
      name: OLD_IMAGE
      type: string
    - description: Name and tag for the application container image
      name: IMAGE_TAG_COMMITID
      type: string
    - description: Name and tag for the application container image
      name: IMAGE_TAG_ENV
      type: string

  tasks:

    - name: fetch-sourcecode
      params:
        - name: url
          value: $(params.GIT_SOURCECODE_URL)
        - name: revision
          value: $(params.GIT_SOURCECODE_REVISION)
        - name: sparseCheckoutDirectories
          value: $(params.SOURCECODE_DIR)
      taskRef:
        kind: Task
        name: git-task
      workspaces:
        - name: output
          workspace: sourcecode

    - name: fetch-deployment-manifests
      params:
        - name: url
          value: $(params.GIT_DEPLOYMENT_MANIFESTS_URL)
        - name: revision
          value: $(params.GIT_DEPLOYMENT_MANIFESTS_REVISION)
        - name: sparseCheckoutDirectories
          value: $(params.DEPLOYMENT_MANIFESTS_DIR)
      taskRef:
        kind: Task
        name: git-task
      workspaces:
        - name: output
          workspace: deployment-manifests

    - name: maven-package
      params:
        - name: goals
          value:
            - package
        - name: opt_params
          value: '-Dquarkus.profile=prod'
        - name: project_dir
          value: $(params.SOURCECODE_DIR)
      runAfter:
        - fetch-sourcecode
        - fetch-deployment-manifests
      taskRef:
        kind: Task
        name: maven-task
      workspaces:
        - name: source
          workspace: sourcecode
        - name: maven-settings
          workspace: maven-settings

    - name: image-build-push
      params:
        - name: dockerfile
          value: $(params.DOCKERFILE_PATH)
        - name: image
          value: $(params.IMAGE)
        - name: image_tag
          value: $(params.IMAGE_TAG_COMMITID)
        - name: env_image_tag
          value: $(params.IMAGE_TAG_ENV)
        - name: project_dir
          value: $(params.SOURCECODE_DIR)
      runAfter:
        - maven-package
      taskRef:
        kind: Task
        name: imagebuild-task
      workspaces:
        - name: source
          workspace: sourcecode

    - name: kustomize-update-imagetag
      params:
        - name: kustomize_dir
          value: $(params.DEPLOYMENT_MANIFESTS_DIR)
        - name: old_image_name
          value: $(params.IMAGE)
        - name: new_image_name
          value: $(params.IMAGE)
        - name: image_tag
          value: $(params.IMAGE_TAG_COMMITID)
        - name: env_image_tag
          value: $(params.IMAGE_TAG_ENV)
        - name: git_user_name
          value: $(params.GIT_USER_NAME)
        - name: git_user_email
          value: $(params.GIT_USER_EMAIL)
        - name: git_revision
          value: $(params.GIT_DEPLOYMENT_MANIFESTS_REVISION)
      runAfter:
        - image-build-push
      taskRef:
        kind: Task
        name: kustomize-update-imagetag-task
      workspaces:
        - name: source
          workspace: deployment-manifests

    - name: argocd-sync-and-wait
      params:
        - name: application-name
          value: apm-dev
        - name: revision
          value: main
      runAfter:
        - kustomize-update-imagetag
      taskRef:
        kind: Task
        name: argocd-sync-and-wait-task
  workspaces:
    - name: maven-settings
    - name: sourcecode
    - name: deployment-manifests